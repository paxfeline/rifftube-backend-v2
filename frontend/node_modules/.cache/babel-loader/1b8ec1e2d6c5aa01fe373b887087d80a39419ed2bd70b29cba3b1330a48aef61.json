{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/test_rails/frontend/src/components/Login/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { attemptLogin } from '../../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  let {\n    attemptLogin /*, videoID */\n  } = _ref;\n  const email_ref = /*#__PURE__*/React.createRef();\n  const pwd_ref = /*#__PURE__*/React.createRef();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"session_email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"email\",\n        name: \"session[email]\",\n        id: \"session_email\",\n        ref: email_ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"session_password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"password\",\n        name: \"session[password]\",\n        id: \"session_password\",\n        ref: pwd_ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(email_ref);\n        debugger;\n        attemptLogin(email_ref.current.value, pwd_ref.current.value);\n      },\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), \"or\", /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      login_uri: \"https://localhost:3000/login-with-google\",\n      onError: () => {\n        console.log('Login Failed');\n      },\n      className: \"google-login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nconst mapStateToProps = state => ({\n  //videoID: state.videoID,\n});\nconst mapDispatchToProps = {\n  attemptLogin\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","connect","GoogleLogin","attemptLogin","Login","email_ref","createRef","pwd_ref","console","log","current","value","mapStateToProps","state","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/components/Login/Login.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { attemptLogin } from '../../actions/index.js';\n\nconst Login = ({ attemptLogin /*, videoID */ }) => {\n  const email_ref = React.createRef();\n  const pwd_ref = React.createRef();\n  return (\n    <React.Fragment>\n      <div className=\"form-group\">\n        <label htmlFor=\"session_email\">Email</label><br/>\n        <input className=\"form-control\" type=\"email\" name=\"session[email]\" id=\"session_email\" ref={email_ref} />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"session_password\">Password</label><br/>\n        <input className=\"form-control\" type=\"password\" name=\"session[password]\" id=\"session_password\" ref={pwd_ref} />\n      </div>\n      <button onClick={() => {console.log(email_ref); debugger;\n        attemptLogin(email_ref.current.value, pwd_ref.current.value);\n        }}>login</button>\n      <br />or\n      <GoogleLogin\n        login_uri=\"https://localhost:3000/login-with-google\"\n        onError={() => {\n          console.log('Login Failed');\n        }}\n        className=\"google-login\"\n      />\n    </React.Fragment>\n  );};\n\nconst mapStateToProps = (state) => ({\n  //videoID: state.videoID,\n});\n\nconst mapDispatchToProps = {\n  attemptLogin,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,YAAY,QAAQ,wBAAwB;AAAC;AAEtD,MAAMC,KAAK,GAAG,QAAqC;EAAA,IAApC;IAAED,YAAY,CAAC;EAAe,CAAC;EAC5C,MAAME,SAAS,gBAAGL,KAAK,CAACM,SAAS,EAAE;EACnC,MAAMC,OAAO,gBAAGP,KAAK,CAACM,SAAS,EAAE;EACjC,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAO,OAAO,EAAC,eAAe;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACjD;QAAO,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,OAAO;QAAC,IAAI,EAAC,gBAAgB;QAAC,EAAE,EAAC,eAAe;QAAC,GAAG,EAAED;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpG,eACN;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAO,OAAO,EAAC,kBAAkB;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACvD;QAAO,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,UAAU;QAAC,IAAI,EAAC,mBAAmB;QAAC,EAAE,EAAC,kBAAkB;QAAC,GAAG,EAAEE;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3G,eACN;MAAQ,OAAO,EAAE,MAAM;QAACC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;QAAE;QAC9CF,YAAY,CAACE,SAAS,CAACK,OAAO,CAACC,KAAK,EAAEJ,OAAO,CAACG,OAAO,CAACC,KAAK,CAAC;MAC5D,CAAE;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACnB;MAAA;MAAA;MAAA;IAAA,QAAM,MACN,uBAAC,WAAW;MACV,SAAS,EAAC,0CAA0C;MACpD,OAAO,EAAE,MAAM;QACbH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAE;MACF,SAAS,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AACjB,CAAC;AAAC,KAzBAL,KAAK;AA2BX,MAAMQ,eAAe,GAAIC,KAAK,KAAM;EAClC;AAAA,CACD,CAAC;AAEF,MAAMC,kBAAkB,GAAG;EACzBX;AACF,CAAC;AAED,eAAeF,OAAO,CAACW,eAAe,EAAEE,kBAAkB,CAAC,CAACV,KAAK,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}