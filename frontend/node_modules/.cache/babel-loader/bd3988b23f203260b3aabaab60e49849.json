{"ast":null,"code":"import{RECEIVE_RIFF_LIST,RECEIVE_NAME_UPDATE,LOAD_USER_DATA}from'../actions/index.js';var nameReducer=function nameReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case RECEIVE_NAME_UPDATE:case RECEIVE_RIFF_LIST:case LOAD_USER_DATA:return action.payload.name||state;// hacky but added because no name is returned for view riffs\ndefault:return state;}};export default nameReducer;","map":{"version":3,"names":["RECEIVE_RIFF_LIST","RECEIVE_NAME_UPDATE","LOAD_USER_DATA","nameReducer","state","action","type","payload","name"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/name-reducer.js"],"sourcesContent":["import { RECEIVE_RIFF_LIST, RECEIVE_NAME_UPDATE, LOAD_USER_DATA } from '../actions/index.js';\n\nconst nameReducer = (state = '', action) => {\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n    case LOAD_USER_DATA:\n      return action.payload.name || state; // hacky but added because no name is returned for view riffs\n    default:\n      return state;\n  }\n};\n\nexport default nameReducer;\n"],"mappings":"AAAA,OAASA,iBAAiB,CAAEC,mBAAmB,CAAEC,cAAc,KAAQ,qBAAqB,CAE5F,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAA2B,IAAvBC,MAAK,2DAAG,EAAE,IAAEC,OAAM,2CACrC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAKL,oBAAmB,CACxB,IAAKD,kBAAiB,CACtB,IAAKE,eAAc,CACjB,MAAOG,OAAM,CAACE,OAAO,CAACC,IAAI,EAAIJ,KAAK,CAAE;AACvC,QACE,MAAOA,MAAK,CAAC,CAEnB,CAAC,CAED,cAAeD,YAAW"},"metadata":{},"sourceType":"module"}