{"ast":null,"code":"import _objectWithoutProperties from\"/Users/davidnewberry/Documents/test_rails/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _toConsumableArray from\"/Users/davidnewberry/Documents/test_rails/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/davidnewberry/Documents/test_rails/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _excluded=[\"payload\"];import{SET_VIDEO_ID,DELETE_RIFF,SAVE_RIFF,CREATE_TEMP_AUDIO_RIFF,CREATE_TEMP_TEXT_RIFF,SAVE_TEMP_AUDIO,CANCEL_EDIT,EDIT_RIFF,RECEIVE_RIFF_LIST,SAVE_RIFF_SUCCESS,UPDATE_RIFF_TIME_SUCCESS}from'../actions/index.js';var initialState={all:[],temp:null,editIndex:null};var riffsReducer=function riffsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_VIDEO_ID:return initialState;case CREATE_TEMP_AUDIO_RIFF:case CREATE_TEMP_TEXT_RIFF:return _objectSpread(_objectSpread({},state),{},{temp:_objectSpread(_objectSpread({},state.temp),{},{type:action.type===CREATE_TEMP_AUDIO_RIFF?'audio':'text',// @ts-ignore\n// rifftubePlayer isn't normally on the window object so this throws an error but it works.\ntime:window.rifftubePlayer.getCurrentTime(),video_id:action.videoID,tempId:new Date().getUTCMilliseconds()// used to get perm id from server\n}),editIndex:null});case EDIT_RIFF:return _objectSpread(_objectSpread({},state),{},{temp:_objectSpread({},state.all[action.payload]),// copy specified riff to tempRiff\neditIndex:action.payload});case DELETE_RIFF:{var _ret=_objectSpread({},state);_ret.all=_ret.all.filter(function(el){return el.id!==action.id;});// silly change\n/*let index = ret.all.findIndex(el => el.id === action.id);\n\n\n\n      ret.all.splice(index, 1);*/return _ret;}case SAVE_TEMP_AUDIO:return _objectSpread(_objectSpread({},state),{},{temp:_objectSpread(_objectSpread({},state.temp),{},{duration:action.duration//payload: action.payload\n})});case CANCEL_EDIT:return _objectSpread(_objectSpread({},state),{},{temp:null,editIndex:null});case RECEIVE_RIFF_LIST:return _objectSpread(_objectSpread({},state),{},{timestamp:action.payload.timestamp,all:action.payload.body.map(function(el){return _objectSpread(_objectSpread({},el),{},{time:el.start_time,payload:el.isText?el.text:null,type:el.isText?'text':'audio'});})});case UPDATE_RIFF_TIME_SUCCESS:var riffs=_toConsumableArray(state.all);riffs.forEach(function(el,ind,arr){if(el.id===action.id)arr[ind]=_objectSpread(_objectSpread({},el),{},{id:action.id,time:Number(action.time)});//el.id = action.payload.id;\n});var ret=_objectSpread(_objectSpread({},state),{},{all:riffs});return ret;case SAVE_RIFF_SUCCESS:if(action.payload.type==='add'){var _riffs=_toConsumableArray(state.all);_riffs.forEach(function(el,ind,arr){if(el.tempId===action.payload.tempId)arr[ind]=_objectSpread(_objectSpread({},el),{},{id:action.payload.id});//el.id = action.payload.id;\n});var _ret2=_objectSpread(_objectSpread({},state),{},{all:_riffs});return _ret2;}else return state;case SAVE_RIFF:{var _action$payload=action.payload,payload=_action$payload.payload,actionPayload=_objectWithoutProperties(_action$payload,_excluded);// payload (audio data) will be ignored\nvar riff=_objectSpread(_objectSpread({},state.temp),actionPayload);// the payload should be included if this is a text riff\nif(state.temp.type===\"text\")riff.payload=payload;var _riffs2;// adding a new riff:\nif(state.editIndex===null)_riffs2=[].concat(_toConsumableArray(state.all),[riff]);// EDIT_MODE (existing riff):\nelse{_riffs2=_toConsumableArray(state.all);_riffs2[state.editIndex]=riff;}return{all:_riffs2,temp:null,editIndex:null};}/*\n    case LOAD_RIFF:\n      let ret = { ...state }; // will this work?\n      ret.all[action.payload].loading = true;\n      return ret;\n    case RIFF_LOADED: {\n      debugger;\n      const b = new Blob(new Array(action.payload), { type: 'audio/mp3' });\n      let riffs = [...state.all];\n      riffs.forEach(el => {\n        if (el.id === action.id) {\n          el.payload = b;\n          el.loading = false;\n        }\n      });\n      let ret = { ...state, all: riffs };\n\n      // if this is being edited currently, tempRiff needs to be updated as well\n      // editIndex != null simply means that something is being edited\n      if (state.editIndex !== null && state.temp.id === action.id)\n        ret.temp = { ...ret.temp, payload: b };\n\n      return ret;\n    }\n    */default:return state;}};export default riffsReducer;","map":{"version":3,"names":["SET_VIDEO_ID","DELETE_RIFF","SAVE_RIFF","CREATE_TEMP_AUDIO_RIFF","CREATE_TEMP_TEXT_RIFF","SAVE_TEMP_AUDIO","CANCEL_EDIT","EDIT_RIFF","RECEIVE_RIFF_LIST","SAVE_RIFF_SUCCESS","UPDATE_RIFF_TIME_SUCCESS","initialState","all","temp","editIndex","riffsReducer","state","action","type","time","window","rifftubePlayer","getCurrentTime","video_id","videoID","tempId","Date","getUTCMilliseconds","payload","ret","filter","el","id","duration","timestamp","body","map","start_time","isText","text","riffs","forEach","ind","arr","Number","actionPayload","riff"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/riffs-reducer.js"],"sourcesContent":["import {\n  SET_VIDEO_ID,\n  DELETE_RIFF,\n  SAVE_RIFF,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  SAVE_TEMP_AUDIO,\n  CANCEL_EDIT,\n  EDIT_RIFF,\n  RECEIVE_RIFF_LIST,\n  SAVE_RIFF_SUCCESS,\n  UPDATE_RIFF_TIME_SUCCESS,\n} from '../actions/index.js';\n\nlet initialState = {\n  all: [],\n  temp: null,\n  editIndex: null,\n};\n\nconst riffsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return initialState;\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n      return {\n        ...state,\n        temp: {\n          ...state.temp,\n          type: action.type === CREATE_TEMP_AUDIO_RIFF ? 'audio' : 'text',\n          // @ts-ignore\n          // rifftubePlayer isn't normally on the window object so this throws an error but it works.\n          time: window.rifftubePlayer.getCurrentTime(),\n          video_id: action.videoID,\n          tempId: new Date().getUTCMilliseconds(), // used to get perm id from server\n        },\n        editIndex: null,\n      };\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: { ...state.all[action.payload] }, // copy specified riff to tempRiff\n        editIndex: action.payload,\n      };\n    case DELETE_RIFF: {\n      let ret = { ...state };\n\n      ret.all = ret.all.filter((el) => el.id !== action.id);\n\n      // silly change\n\n      /*let index = ret.all.findIndex(el => el.id === action.id);\n\n\n\n      ret.all.splice(index, 1);*/\n\n      return ret;\n    }\n    case SAVE_TEMP_AUDIO:\n      return {\n        ...state,\n        temp: {\n          ...state.temp,\n          duration: action.duration,\n          //payload: action.payload\n        },\n      };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null,\n      };\n    case RECEIVE_RIFF_LIST:\n      return {\n        ...state,\n        timestamp: action.payload.timestamp,\n        all: action.payload.body.map((el) => ({\n          ...el,\n          time: el.start_time,\n          payload: el.isText ? el.text : null,\n          type: el.isText ? 'text' : 'audio',\n        })),\n      };\n\n    case UPDATE_RIFF_TIME_SUCCESS:\n      let riffs = [...state.all];\n      riffs.forEach((el, ind, arr) => {\n        if (el.id === action.id)\n          arr[ind] = { ...el, id: action.id, time: Number(action.time) };\n        //el.id = action.payload.id;\n      });\n      let ret = { ...state, all: riffs };\n      return ret;\n\n    case SAVE_RIFF_SUCCESS:\n      if (action.payload.type === 'add') {\n        let riffs = [...state.all];\n        riffs.forEach((el, ind, arr) => {\n          if (el.tempId === action.payload.tempId)\n            arr[ind] = { ...el, id: action.payload.id };\n          //el.id = action.payload.id;\n        });\n        let ret = { ...state, all: riffs };\n        return ret;\n      } else return state;\n\n    case SAVE_RIFF: {\n      const { payload, ...actionPayload } = action.payload; // payload (audio data) will be ignored\n      const riff = { ...state.temp, ...actionPayload };\n\n      // the payload should be included if this is a text riff\n      if ( state.temp.type === \"text\" )\n        riff.payload = payload;\n\n      let riffs;\n\n      // adding a new riff:\n      if (state.editIndex === null) riffs = [...state.all, riff];\n      // EDIT_MODE (existing riff):\n      else {\n        riffs = [...state.all];\n        riffs[state.editIndex] = riff;\n      }\n\n      return {\n        all: riffs,\n        temp: null,\n        editIndex: null,\n      };\n    }\n\n    /*\n    case LOAD_RIFF:\n      let ret = { ...state }; // will this work?\n      ret.all[action.payload].loading = true;\n      return ret;\n    case RIFF_LOADED: {\n      debugger;\n      const b = new Blob(new Array(action.payload), { type: 'audio/mp3' });\n      let riffs = [...state.all];\n      riffs.forEach(el => {\n        if (el.id === action.id) {\n          el.payload = b;\n          el.loading = false;\n        }\n      });\n      let ret = { ...state, all: riffs };\n\n      // if this is being edited currently, tempRiff needs to be updated as well\n      // editIndex != null simply means that something is being edited\n      if (state.editIndex !== null && state.temp.id === action.id)\n        ret.temp = { ...ret.temp, payload: b };\n\n      return ret;\n    }\n    */\n\n    default:\n      return state;\n  }\n};\n\nexport default riffsReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}