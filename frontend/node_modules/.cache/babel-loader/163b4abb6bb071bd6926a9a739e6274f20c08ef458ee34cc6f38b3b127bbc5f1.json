{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditRiff.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Record from './Record.js';\nimport { saveRiff, setPlayerMode, saveTempAudio, cancelEdit, EDIT_MODE } from '../../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditRiff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.durationField = /*#__PURE__*/React.createRef();\n    this.htmlPayloadField = /*#__PURE__*/React.createRef();\n    this.startTimeField = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    console.log('ed rif red');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-riff\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-riff-inner\",\n        children: [this.props.tempRiff.type === 'audio' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [this.props.mode === EDIT_MODE && this.props.editIndex && !this.props.tempAudio ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Record, {\n            saveTempAudio: this.props.saveTempAudio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), this.props.tempAudio ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              debugger;\n\n              // https://stackoverflow.com/questions/43620594/audio-blob-not-working-in-ios-safari\n              // answer by scottmizo\n\n              /*\n              var blob = this.props.tempAudio;\n              var audioContext = new (window.webkitAudioContext || window.AudioContext)();\n              var arrayBuffer = await (new Response(blob)).arrayBuffer();\n              audioContext.decodeAudioData(arrayBuffer, audioData => {\n                var source = audioContext.createBufferSource();\n                source.buffer = audioData;\n                source.connect(audioContext.destination);\n                source.start()\n              });\n              */\n\n              var audio = document.createElement('audio');\n              var source = document.createElement('source');\n              audio.appendChild(source);\n              audio.controls = false;\n              var audioURL = URL.createObjectURL(this.props.tempAudio);\n              source.src = audioURL;\n              audio.load();\n\n              //audio.src = audioURL;\n              audio.play();\n            },\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Start:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"riff-start-field\",\n              defaultValue: this.props.tempRiff.time,\n              ref: this.startTimeField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !this.props.tempAudio,\n            onClick: () => {\n              this.props.saveRiff(this.props.googleUser.getAuthResponse().id_token, {\n                payload: this.props.tempAudio,\n                time: Number(this.startTimeField.current.value)\n              }, this.props.tempRiff);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"HTML payload:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"riff-edit-field\",\n            ref: this.htmlPayloadField,\n            defaultValue: this.props.tempRiff.payload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Duration:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"riff-duration-field\",\n              defaultValue: this.props.tempRiff.duration || 2,\n              ref: this.durationField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Start:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"riff-start-field\",\n              defaultValue: this.props.tempRiff.time,\n              ref: this.startTimeField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.props.saveRiff(this.props.googleUser.getAuthResponse().id_token, {\n                payload: this.htmlPayloadField.current.value,\n                duration: Number(this.durationField.current.value),\n                time: Number(this.startTimeField.current.value)\n              }, this.props.tempRiff, this.props.websocket);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.props.cancelEdit();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  mode: state.mode,\n  tempRiff: state.riffs.temp,\n  tempAudio: state.riffsAudio.temp,\n  editIndex: state.riffs.editIndex,\n  googleUser: state.googleUser,\n  websocket: state.websocket\n});\nconst mapDispatchToProps = {\n  setPlayerMode,\n  saveRiff,\n  saveTempAudio,\n  cancelEdit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRiff);","map":{"version":3,"names":["React","connect","Record","saveRiff","setPlayerMode","saveTempAudio","cancelEdit","EDIT_MODE","EditRiff","Component","constructor","props","durationField","createRef","htmlPayloadField","startTimeField","render","console","log","tempRiff","type","mode","editIndex","tempAudio","audio","document","createElement","source","appendChild","controls","audioURL","URL","createObjectURL","src","load","play","time","googleUser","getAuthResponse","id_token","payload","Number","current","value","duration","websocket","mapStateToProps","state","riffs","temp","riffsAudio","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/components/RiffControls/EditRiff.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Record from './Record.js';\nimport {\n  saveRiff,\n  setPlayerMode,\n  saveTempAudio,\n  cancelEdit,\n  EDIT_MODE,\n} from '../../actions/index.js';\n\nclass EditRiff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.durationField = React.createRef();\n    this.htmlPayloadField = React.createRef();\n    this.startTimeField = React.createRef();\n  }\n\n\n\n  render() {\n    console.log('ed rif red');\n    return (\n      <div className=\"edit-riff\">\n        <div className=\"edit-riff-inner\">\n          {this.props.tempRiff.type === 'audio' ? (\n            <React.Fragment>\n              {this.props.mode === EDIT_MODE &&\n              this.props.editIndex &&\n              !this.props.tempAudio ? (\n                <span>Loading...</span>\n              ) : null}\n              <Record saveTempAudio={this.props.saveTempAudio} />\n              {this.props.tempAudio ? (\n                <button\n                  onClick={async () => {\n                    debugger;\n                \n                    // https://stackoverflow.com/questions/43620594/audio-blob-not-working-in-ios-safari\n                    // answer by scottmizo\n                \n                    /*\n                    var blob = this.props.tempAudio;\n                    var audioContext = new (window.webkitAudioContext || window.AudioContext)();\n                    var arrayBuffer = await (new Response(blob)).arrayBuffer();\n                    audioContext.decodeAudioData(arrayBuffer, audioData => {\n                      var source = audioContext.createBufferSource();\n                      source.buffer = audioData;\n                      source.connect(audioContext.destination);\n                      source.start()\n                    });\n                    */\n                \n                    var audio = document.createElement('audio');\n                    var source = document.createElement('source');\n                    audio.appendChild(source);\n                \n                    audio.controls = false;\n                    var audioURL = URL.createObjectURL(this.props.tempAudio);\n                \n                    source.src = audioURL;\n                    audio.load();\n                \n                    //audio.src = audioURL;\n                    audio.play();\n                  }}\n                >\n                  Play\n                </button>\n              ) : null}\n              <br />\n              <div>\n                Start:{' '}\n                <input\n                  id=\"riff-start-field\"\n                  defaultValue={this.props.tempRiff.time}\n                  ref={this.startTimeField}\n                />\n              </div>\n              <button\n                disabled={!this.props.tempAudio}\n                onClick={() => {\n                  this.props.saveRiff(\n                    this.props.googleUser.getAuthResponse().id_token,\n                    {\n                      payload: this.props.tempAudio,\n                      time: Number(this.startTimeField.current.value),\n                    },\n                    this.props.tempRiff\n                  );\n                }}\n              >\n                Save\n              </button>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <div>HTML payload:</div>\n              <textarea\n                id=\"riff-edit-field\"\n                ref={this.htmlPayloadField}\n                defaultValue={this.props.tempRiff.payload}\n              />\n\n              <div>\n                Duration:{' '}\n                <input\n                  id=\"riff-duration-field\"\n                  defaultValue={this.props.tempRiff.duration || 2}\n                  ref={this.durationField}\n                />\n              </div>\n              <div>\n                Start:{' '}\n                <input\n                  id=\"riff-start-field\"\n                  defaultValue={this.props.tempRiff.time}\n                  ref={this.startTimeField}\n                />\n              </div>\n              <button\n                onClick={() => {\n                  this.props.saveRiff(\n                    this.props.googleUser.getAuthResponse().id_token,\n                    {\n                      payload: this.htmlPayloadField.current.value,\n                      duration: Number(this.durationField.current.value),\n                      time: Number(this.startTimeField.current.value),\n                    },\n                    this.props.tempRiff,\n                    this.props.websocket\n                  );\n                }}\n              >\n                Save\n              </button>\n            </React.Fragment>\n          )}\n\n          <button\n            onClick={() => {\n              this.props.cancelEdit();\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  mode: state.mode,\n  tempRiff: state.riffs.temp,\n  tempAudio: state.riffsAudio.temp,\n  editIndex: state.riffs.editIndex,\n  googleUser: state.googleUser,\n  websocket: state.websocket,\n});\n\nconst mapDispatchToProps = {\n  setPlayerMode,\n  saveRiff,\n  saveTempAudio,\n  cancelEdit,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRiff);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}