{"ast":null,"code":"import { SET_VIDEO_ID, SET_RIFF_NOT_PLAYING, SET_RIFF_PLAYING } from '../actions/index.js';\nconst riffsPlayingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n    case SET_RIFF_PLAYING:\n    case SET_RIFF_NOT_PLAYING:\n      return {\n        ...state,\n        [action.payload]: action.type === SET_RIFF_PLAYING ? true : false\n      };\n    default:\n      return state;\n  }\n};\nexport default riffsPlayingReducer;","map":{"version":3,"names":["SET_VIDEO_ID","SET_RIFF_NOT_PLAYING","SET_RIFF_PLAYING","riffsPlayingReducer","state","action","type","payload"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/riffsPlaying-reducer.js"],"sourcesContent":["import {\n  SET_VIDEO_ID,\n  SET_RIFF_NOT_PLAYING,\n  SET_RIFF_PLAYING,\n} from '../actions/index.js';\n\nconst riffsPlayingReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n    case SET_RIFF_PLAYING:\n    case SET_RIFF_NOT_PLAYING:\n      return {\n        ...state,\n        [action.payload]: action.type === SET_RIFF_PLAYING ? true : false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default riffsPlayingReducer;\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,oBAAoB,EACpBC,gBAAgB,QACX,qBAAqB;AAE5B,MAAMC,mBAAmB,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,YAAY;MACf,OAAO,CAAC,CAAC;IACX,KAAKE,gBAAgB;IACrB,KAAKD,oBAAoB;MACvB,OAAO;QACL,GAAGG,KAAK;QACR,CAACC,MAAM,CAACE,OAAO,GAAGF,MAAM,CAACC,IAAI,KAAKJ,gBAAgB,GAAG,IAAI,GAAG;MAC9D,CAAC;IACH;MACE,OAAOE,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}