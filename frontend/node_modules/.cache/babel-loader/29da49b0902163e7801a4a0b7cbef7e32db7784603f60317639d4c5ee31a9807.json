{"ast":null,"code":"import { RECEIVE_RIFF_LIST, RECEIVE_NAME_UPDATE, LOAD_USER_DATA } from '../actions/index.js';\nconst nameReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n    case LOAD_USER_DATA:\n      return action.payload.name || state;\n    // hacky but added because no name is returned for view riffs\n    default:\n      return state;\n  }\n};\nexport default nameReducer;","map":{"version":3,"names":["RECEIVE_RIFF_LIST","RECEIVE_NAME_UPDATE","LOAD_USER_DATA","nameReducer","state","action","type","payload","name"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/name-reducer.js"],"sourcesContent":["import { RECEIVE_RIFF_LIST, RECEIVE_NAME_UPDATE, LOAD_USER_DATA } from '../actions/index.js';\n\nconst nameReducer = (state = '', action) => {\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n    case LOAD_USER_DATA:\n      return action.payload.name || state; // hacky but added because no name is returned for view riffs\n    default:\n      return state;\n  }\n};\n\nexport default nameReducer;\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,mBAAmB,EAAEC,cAAc,QAAQ,qBAAqB;AAE5F,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,mBAAmB;IACxB,KAAKD,iBAAiB;IACtB,KAAKE,cAAc;MACjB,OAAOG,MAAM,CAACE,OAAO,CAACC,IAAI,IAAIJ,KAAK;IAAE;IACvC;MACE,OAAOA,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}