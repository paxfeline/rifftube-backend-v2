{"ast":null,"code":"import axios from 'axios';\nexport const GOOGLE_USER_SIGNIN = 'GOOGLE_USER_SIGNIN';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\nexport const EDIT_RIFF = 'EDIT_RIFF';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_RIFF = 'SAVE_RIFF';\nexport const SAVE_RIFF_SUCCESS = 'SAVE_RIFF_SUCCESS';\nexport const SAVE_RIFF_FAILURE = 'SAVE_RIFF_FAILURE';\nexport const UPDATE_RIFF_TIME_SUCCESS = 'UPDATE_RIFF_TIME_SUCCESS';\nexport const DELETE_RIFF = 'DELETE_RIFF';\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\nexport const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_PUBLIC_USER_DATA = 'LOAD_PUBLIC_USER_DATA';\nexport const LOAD_PUBLIC_USER_NAME = 'LOAD_PUBLIC_USER_NAME';\nexport const LOAD_GLOBAL_VIDEO_LIST = 'LOAD_GLOBAL_VIDEO_LIST';\nexport const SET_IMMEDIATE_OFF = 'SET_IMMEDIATE_OFF';\nexport const SET_IMMEDIATE_ON = 'SET_IMMEDIATE_ON';\nexport const SET_RECORDER = 'SET_RECORDER';\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\nexport const SAVE_PIC_SUCCESS = 'SAVE_PIC_SUCCESS';\nexport const SAVE_PIC_FAILURE = 'SAVE_PIC_FAILURE';\n\n/******** Login and logout */\n\nexport const attemptLogin = (email, password) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/login`,\n      data: {\n        email,\n        password\n      }\n    }).then(res => {\n      debugger;\n      dispatch({\n        type: LOGIN,\n        userInfo: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const checkGoogleCredentials = credentialResponse => {\n  console.log(credentialResponse);\n  debugger;\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/login-with-google/${credentialResponse}`,\n      data: {}\n    }).then(res => {\n      console.log(res);\n      dispatch({});\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n/******** WebSockets */\n\nexport const setWebSocket = payload => ({\n  type: WEB_SOCKET_UPDATE,\n  payload\n});\n\n/******** Editing Interface */\n\nexport const setVideoDuration = payload => ({\n  type: SET_VIDEO_DURATION,\n  payload\n});\nexport const setRifferName = (newName, googleUser) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        newName\n      }\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_NAME_UPDATE,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setRiffPic = (payload, googleUser) => {\n  return dispatch => {\n    let fd = new FormData();\n    fd.append('token', googleUser.getAuthResponse().id_token);\n    fd.append('image', payload);\n    axios({\n      method: 'post',\n      url: `/save-pic`,\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: SAVE_PIC_SUCCESS,\n        payload: res.data\n      }); // fix these to constants\n    }).catch(err => {\n      dispatch({\n        type: SAVE_PIC_FAILURE,\n        payload: err.response\n      });\n    });\n  };\n};\nexport const getRiffs = (videoID, googleUser) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/get-riffs`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        videoID\n      }\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setVideoID = (videoID, googleUser) => {\n  return dispatch => {\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID\n    });\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: {\n          body: []\n        }\n      });\n    });\n    if (googleUser && googleUser.getAuthResponse) {\n      axios({\n        method: 'post',\n        url: `/get-riffs`,\n        data: {\n          token: googleUser.getAuthResponse().id_token,\n          videoID\n        }\n      }).then(res => {\n        dispatch({\n          type: RECEIVE_RIFF_LIST,\n          payload: res.data\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, googleUser, video_id, websocket) => {\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`,\n      data: {\n        token: googleUser.getAuthResponse().id_token\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_RIFF,\n        id: riffID\n      });\n\n      // websocket call\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id\n      }));\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\n\n// this shit really needs to be decoupled\nexport const setGoogleUser = googleUser => {\n  return dispatch => {\n    dispatch({\n      type: GOOGLE_USER_SIGNIN,\n      payload: googleUser\n    });\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\nexport const googleUserLogout = () => ({\n  type: GOOGLE_USER_SIGNIN,\n  payload: null\n});\nexport const getRiffsMeta = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getViewRiffs = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getUserData = googleUser => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-user-data/${googleUser.getAuthResponse().id_token}`\n    }).then(res => {\n      dispatch({\n        type: LOAD_USER_DATA,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getPublicUserData = id => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-user-data-by-id/${id}`\n    }).then(res => {\n      dispatch({\n        type: LOAD_PUBLIC_USER_DATA,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getGlobalVideoList = () => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: '/get-global-video-list'\n    }).then(res => {\n      dispatch({\n        type: LOAD_GLOBAL_VIDEO_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setPlayerMode = mode => ({\n  type: SET_PLAYER_MODE,\n  payload: mode\n});\nexport const togglePlayerMode = mode => ({\n  type: TOGGLE_PLAYER_MODE\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration\n});\nexport const editRiff = (payload, id, load) => {\n  return dispatch => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload,\n      // index\n      id\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (load) rawLoadAxios(dispatch, id); // loads riff audio\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT\n});\nexport const updateRiffTime = (token, start_time, video_id, riff_id, websocket) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/update-riff-time`,\n      data: {\n        token,\n        start_time,\n        id: riff_id\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: UPDATE_RIFF_TIME_SUCCESS,\n        id: riff_id,\n        time: start_time\n      });\n      // websocket call\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id: video_id\n      }));\n    }).catch(err => {\n      dispatch({\n        type: SAVE_RIFF_FAILURE,\n        payload: err.response\n      });\n    });\n\n    // dispatch NOTHING\n  };\n};\n\nexport const saveRiff = (token, payload, riff, websocket) => {\n  return dispatch => {\n    let fd = new FormData();\n    fd.append('token', token);\n    fd.append(riff.type === 'text' ? 'text' : 'blob', payload.payload);\n    fd.append('type', riff.type);\n    fd.append('duration', riff.type === 'text' ? payload.duration : riff.duration // how can this be right? (I should just relax)\n    );\n\n    fd.append('start_time', payload.time);\n    fd.append('video_id', riff.video_id);\n    fd.append('tempId', riff.tempId);\n\n    // this may be null, and that's ok\n    fd.append('id', riff.id);\n    axios({\n      method: 'post',\n      url: `/save-riff`,\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: SAVE_RIFF_SUCCESS,\n        payload: res.data\n      });\n      // websocket call\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id: riff.video_id\n      }));\n    }).catch(err => {\n      dispatch({\n        type: SAVE_RIFF_FAILURE,\n        payload: err.response\n      });\n    });\n\n    // dispatch local save command (clears temp audio)\n    dispatch({\n      type: SAVE_RIFF,\n      payload,\n      riff\n    });\n  };\n};\nexport const createTempRiff = function (type, videoID) {\n  let immediateRecord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n    videoID,\n    immediateRecord\n  };\n};\nexport const setImmediateOn = () => ({\n  type: SET_IMMEDIATE_ON\n});\nexport const setImmediateOff = () => ({\n  type: SET_IMMEDIATE_OFF\n});\nexport const setRecorder = payload => ({\n  type: SET_RECORDER,\n  payload\n});\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index\n});\nexport const loadRiff = (id, load) => {\n  return dispatch => {\n    dispatch({\n      type: LOAD_RIFF,\n      payload: id\n    });\n    rawLoadAxios(dispatch, id);\n  };\n};\nconst rawLoadAxios = (dispatch, id) => {\n  axios({\n    method: 'get',\n    url: `/load-riff/${id}`,\n    responseType: 'arraybuffer'\n  }).then(res => {\n    dispatch({\n      type: RIFF_LOADED,\n      payload: res.data,\n      id\n    });\n  }).catch(err => console.log(\"error\", err));\n};","map":{"version":3,"names":["axios","GOOGLE_USER_SIGNIN","LOGIN","LOGOUT","CREATE_TEMP_AUDIO_RIFF","CREATE_TEMP_TEXT_RIFF","EDIT_RIFF","CANCEL_EDIT","SAVE_RIFF","SAVE_RIFF_SUCCESS","SAVE_RIFF_FAILURE","UPDATE_RIFF_TIME_SUCCESS","DELETE_RIFF","SAVE_TEMP_AUDIO","SET_RIFF_PLAYING","SET_RIFF_NOT_PLAYING","LOAD_RIFF","RIFF_LOADED","SET_PLAYER_MODE","EDIT_MODE","EDIT_NEW_MODE","PLAY_MODE","PAUSE_MODE","TOGGLE_PLAYER_MODE","SET_VIDEO_ID","RECEIVE_NAME_UPDATE","RECEIVE_RIFF_LIST","RECEIVE_RIFF_META","TOGGLE_VIEW_USERID_MUTED","SET_VIEW_USERID_MUTED","RECEIVE_COLLABORATION_ID","CREATE_PLAYLIST_SUCCESS","CREATE_PLAYLIST_FAILURE","SET_VIDEO_DURATION","LOAD_USER_DATA","LOAD_PUBLIC_USER_DATA","LOAD_PUBLIC_USER_NAME","LOAD_GLOBAL_VIDEO_LIST","SET_IMMEDIATE_OFF","SET_IMMEDIATE_ON","SET_RECORDER","WEB_SOCKET_UPDATE","SAVE_PIC_SUCCESS","SAVE_PIC_FAILURE","attemptLogin","email","password","dispatch","method","url","data","then","res","type","userInfo","catch","err","console","log","checkGoogleCredentials","credentialResponse","setWebSocket","payload","setVideoDuration","setRifferName","newName","googleUser","token","getAuthResponse","id_token","setRiffPic","fd","FormData","append","headers","response","getRiffs","videoID","setVideoID","error","body","deleteRiff","riffID","video_id","websocket","id","send","JSON","stringify","setGoogleUser","googleUserLogout","getRiffsMeta","getViewRiffs","getUserData","getPublicUserData","getGlobalVideoList","setPlayerMode","mode","togglePlayerMode","saveTempAudio","duration","editRiff","load","rawLoadAxios","cancelEdit","updateRiffTime","start_time","riff_id","time","saveRiff","riff","tempId","createTempRiff","immediateRecord","setImmediateOn","setImmediateOff","setRecorder","setRiffPlaying","index","playing","loadRiff","responseType"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\n\nexport const GOOGLE_USER_SIGNIN = 'GOOGLE_USER_SIGNIN';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\n\nexport const EDIT_RIFF = 'EDIT_RIFF';\n\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_RIFF = 'SAVE_RIFF';\n\nexport const SAVE_RIFF_SUCCESS = 'SAVE_RIFF_SUCCESS';\nexport const SAVE_RIFF_FAILURE = 'SAVE_RIFF_FAILURE';\n\nexport const UPDATE_RIFF_TIME_SUCCESS = 'UPDATE_RIFF_TIME_SUCCESS';\n\nexport const DELETE_RIFF = 'DELETE_RIFF';\n\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\n\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\n\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\n\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\n\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\n\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\n\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\n\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\n\nexport const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\n\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_PUBLIC_USER_DATA = 'LOAD_PUBLIC_USER_DATA';\nexport const LOAD_PUBLIC_USER_NAME = 'LOAD_PUBLIC_USER_NAME';\nexport const LOAD_GLOBAL_VIDEO_LIST = 'LOAD_GLOBAL_VIDEO_LIST';\n\nexport const SET_IMMEDIATE_OFF = 'SET_IMMEDIATE_OFF';\nexport const SET_IMMEDIATE_ON = 'SET_IMMEDIATE_ON';\n\nexport const SET_RECORDER = 'SET_RECORDER';\n\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\n\nexport const SAVE_PIC_SUCCESS = 'SAVE_PIC_SUCCESS';\nexport const SAVE_PIC_FAILURE = 'SAVE_PIC_FAILURE';\n\n/******** Login and logout */\n\nexport const attemptLogin = (email, password) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/login`,\n      data: { email, password },\n    }).then((res) => {\n      debugger;\n      dispatch({ type: LOGIN, userInfo: res.data });\n    }).catch(err =>\n      console.log(\"error\", err));\n  };\n};\n\nexport const checkGoogleCredentials = (credentialResponse) => {\n  console.log(credentialResponse);\n  debugger;\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/login-with-google/${credentialResponse}`,\n      data: {  },\n    }).then((res) => {\n      console.log(res);\n      dispatch({  });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n/******** WebSockets */\n\nexport const setWebSocket = (payload) => ({\n  type: WEB_SOCKET_UPDATE,\n  payload,\n});\n\n/******** Editing Interface */\n\nexport const setVideoDuration = (payload) => ({\n  type: SET_VIDEO_DURATION,\n  payload,\n});\n\nexport const setRifferName = (newName, googleUser) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: { token: googleUser.getAuthResponse().id_token, newName },\n    }).then((res) => {\n      dispatch({ type: RECEIVE_NAME_UPDATE, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const setRiffPic = (payload, googleUser) => {\n  return (dispatch) => {\n    let fd = new FormData();\n    fd.append('token', googleUser.getAuthResponse().id_token);\n    fd.append('image', payload);\n    axios({\n      method: 'post',\n      url: `/save-pic`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: SAVE_PIC_SUCCESS, payload: res.data }); // fix these to constants\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_PIC_FAILURE, payload: err.response });\n      });\n  };\n};\n\nexport const getRiffs = (videoID, googleUser) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/get-riffs`,\n      data: { token: googleUser.getAuthResponse().id_token, videoID },\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  }\n};\n\nexport const setVideoID = (videoID, googleUser) => {\n  return (dispatch) => {\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID,\n    });\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(error => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: { body: [] } });\n    });\n    if (googleUser && googleUser.getAuthResponse) {\n      axios({\n        method: 'post',\n        url: `/get-riffs`,\n        data: { token: googleUser.getAuthResponse().id_token, videoID },\n      }).then((res) => {\n        dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, googleUser, video_id, websocket) => {\n  return (dispatch) => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n      },\n    }).then((res) => {\n      dispatch({ type: DELETE_RIFF, id: riffID });\n\n      // websocket call\n      websocket.send(JSON.stringify({ type: 'update', video_id }));\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\n\n// this shit really needs to be decoupled\nexport const setGoogleUser = (googleUser) => {\n  return (dispatch) => {\n    dispatch({\n      type: GOOGLE_USER_SIGNIN,\n      payload: googleUser,\n    });\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\nexport const googleUserLogout = () => ({\n  type: GOOGLE_USER_SIGNIN,\n  payload: null,\n});\n\nexport const getRiffsMeta = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getViewRiffs = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getUserData = (googleUser) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-user-data/${googleUser.getAuthResponse().id_token}`,\n    }).then((res) => {\n      dispatch({ type: LOAD_USER_DATA, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getPublicUserData = (id) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-user-data-by-id/${id}`,\n    }).then((res) => {\n      dispatch({ type: LOAD_PUBLIC_USER_DATA, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getGlobalVideoList = () => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: '/get-global-video-list',\n    }).then((res) => {\n      dispatch({ type: LOAD_GLOBAL_VIDEO_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const setPlayerMode = (mode) => ({\n  type: SET_PLAYER_MODE,\n  payload: mode,\n});\n\nexport const togglePlayerMode = (mode) => ({\n  type: TOGGLE_PLAYER_MODE,\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration,\n});\n\nexport const editRiff = (payload, id, load) => {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload, // index\n      id,\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (load) rawLoadAxios(dispatch, id); // loads riff audio\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT,\n});\n\nexport const updateRiffTime = (token, start_time, video_id, riff_id, websocket) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/update-riff-time`,\n      data: { token, start_time, id: riff_id },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: UPDATE_RIFF_TIME_SUCCESS, id: riff_id, time: start_time });\n        // websocket call\n        websocket.send(\n          JSON.stringify({ type: 'update', video_id: video_id })\n        );\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_RIFF_FAILURE, payload: err.response });\n      });\n\n    // dispatch NOTHING\n  };\n}\n\nexport const saveRiff = (token, payload, riff, websocket) => {\n  return (dispatch) => {\n    let fd = new FormData();\n    fd.append('token', token);\n    fd.append(riff.type === 'text' ? 'text' : 'blob', payload.payload);\n    fd.append('type', riff.type);\n    fd.append(\n      'duration',\n      riff.type === 'text' ? payload.duration : riff.duration // how can this be right? (I should just relax)\n    );\n    fd.append('start_time', payload.time);\n    fd.append('video_id', riff.video_id);\n    fd.append('tempId', riff.tempId);\n\n    // this may be null, and that's ok\n    fd.append('id', riff.id);\n\n    axios({\n      method: 'post',\n      url: `/save-riff`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: SAVE_RIFF_SUCCESS, payload: res.data });\n        // websocket call\n        websocket.send(\n          JSON.stringify({ type: 'update', video_id: riff.video_id })\n        );\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_RIFF_FAILURE, payload: err.response });\n      });\n\n    // dispatch local save command (clears temp audio)\n    dispatch({ type: SAVE_RIFF, payload, riff });\n  };\n};\n\nexport const createTempRiff = (type, videoID, immediateRecord = false) => ({\n  type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n  videoID,\n  immediateRecord,\n});\n\nexport const setImmediateOn = () => ({\n  type: SET_IMMEDIATE_ON,\n});\n\nexport const setImmediateOff = () => ({\n  type: SET_IMMEDIATE_OFF,\n});\n\nexport const setRecorder = (payload) => ({\n  type: SET_RECORDER,\n  payload,\n});\n\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index,\n});\n\nexport const loadRiff = (id, load) => {\n  return (dispatch) => {\n    dispatch({ type: LOAD_RIFF, payload: id });\n    rawLoadAxios(dispatch, id);\n  };\n};\n\nconst rawLoadAxios = (dispatch, id) => {\n  axios({\n    method: 'get',\n    url: `/load-riff/${id}`,\n    responseType: 'arraybuffer',\n  }).then((res) => {\n    dispatch({ type: RIFF_LOADED, payload: res.data, id });\n  }).catch(err => console.log(\"error\", err));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}