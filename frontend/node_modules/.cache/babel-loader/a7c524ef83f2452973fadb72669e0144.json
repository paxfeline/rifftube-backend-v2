{"ast":null,"code":"import{RECEIVE_RIFF_LIST,LOAD_USER_DATA}from'../actions/index.js';var useridReducer=function useridReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case RECEIVE_RIFF_LIST:return action.payload.user_id||state;// hacky but added because no user-id is returned for view riffs\ncase LOAD_USER_DATA:return action.payload.userid;// so inconsistent\ndefault:return state;}};export default useridReducer;","map":{"version":3,"names":["RECEIVE_RIFF_LIST","LOAD_USER_DATA","useridReducer","state","action","type","payload","user_id","userid"],"sources":["/Users/davidnewberry/Documents/test_rails/frontend/src/reducers/userid-reducer.js"],"sourcesContent":["import { RECEIVE_RIFF_LIST, LOAD_USER_DATA } from '../actions/index.js';\n\nconst useridReducer = (state = null, action) => {\n  switch (action.type) {\n    case RECEIVE_RIFF_LIST:\n      return action.payload.user_id || state; // hacky but added because no user-id is returned for view riffs\n    case LOAD_USER_DATA:\n      return action.payload.userid; // so inconsistent\n    default:\n      return state;\n  }\n};\n\nexport default useridReducer;\n"],"mappings":"AAAA,OAASA,iBAAiB,CAAEC,cAAc,KAAQ,qBAAqB,CAEvE,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAA6B,IAAzBC,MAAK,2DAAG,IAAI,IAAEC,OAAM,2CACzC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAKL,kBAAiB,CACpB,MAAOI,OAAM,CAACE,OAAO,CAACC,OAAO,EAAIJ,KAAK,CAAE;AAC1C,IAAKF,eAAc,CACjB,MAAOG,OAAM,CAACE,OAAO,CAACE,MAAM,CAAE;AAChC,QACE,MAAOL,MAAK,CAAC,CAEnB,CAAC,CAED,cAAeD,cAAa"},"metadata":{},"sourceType":"module"}